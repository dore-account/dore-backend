enum GenderStatus {
  male
  woman
}

type Mutation {
  updateUserDetail(
    """
    Parameters for UpdateUserDetail
    """
    input: UpdateUserDetailInput!
  ): UpdateUserDetailPayload
}

type Query {
  creators: [User!]!
  user: User!
}

"""
Autogenerated input type of UpdateUserDetail
"""
input UpdateUserDetailInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  params: UserDetailInput!
}

"""
Autogenerated return type of UpdateUserDetail
"""
type UpdateUserDetailPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User!
}

type User {
  birthDayDd: Int!
  birthDayMm: Int!
  birthDayYy: Int!
  gender: GenderStatus!
  id: ID!
  instagramLink: String!
  introduction: String!
  name: String!
  slug: String!
  tiktokLink: String!
  twitterLink: String!
}

input UserDetailInput {
  birthDayDd: Int!
  birthDayMm: Int!
  birthDayYy: Int!
  gender: GenderStatus!
  instagramLink: String
  introduction: String
  name: String!
  tiktokLink: String
  twitterLink: String
}
