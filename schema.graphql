type Creator {
  """
  クリエイターのカテゴリー
  """
  category: [CreatorCategory!]!

  """
  クリエイターID
  """
  id: ID!

  """
  クリエイター特有の情報
  """
  info: CreatorInfo!
  user: User!
}

type CreatorCategory {
  creatorId: ID!

  """
  クリエイターID
  """
  id: ID!

  """
  カテゴリー
  """
  name: String!
}

type CreatorInfo {
  """
  所属先
  """
  belongs: String!
  creatorId: ID!

  """
  クリエイターID
  """
  id: ID!
}

input CreatorInput {
  belongs: String!
  categoryId: ID!
}

enum GenderStatus {
  male
  woman
}

type Mutation {
  updateCreator(
    """
    Parameters for UpdateCreator
    """
    input: UpdateCreatorInput!
  ): UpdateCreatorPayload
  updateUser(
    """
    Parameters for UpdateUser
    """
    input: UpdateUserInput!
  ): UpdateUserPayload
  updateUserInfo(
    """
    Parameters for UpdateUserInfo
    """
    input: UpdateUserInfoInput!
  ): UpdateUserInfoPayload
  uploadUserImage(
    """
    Parameters for UploadUserImage
    """
    input: UploadUserImageInput!
  ): UploadUserImagePayload
}

type Query {
  creators: [Creator!]!
  user: User!
}

"""
Autogenerated input type of UpdateCreator
"""
input UpdateCreatorInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  params: CreatorInput!
}

"""
Autogenerated return type of UpdateCreator
"""
type UpdateCreatorPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  creator: Creator!
}

"""
Autogenerated input type of UpdateUserInfo
"""
input UpdateUserInfoInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  params: UserInfoInput
}

"""
Autogenerated return type of UpdateUserInfo
"""
type UpdateUserInfoPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User!
}

"""
Autogenerated input type of UpdateUser
"""
input UpdateUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  params: UserInput!
}

"""
Autogenerated return type of UpdateUser
"""
type UpdateUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User!
}

scalar Upload

"""
Autogenerated input type of UploadUserImage
"""
input UploadUserImageInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  image: Upload!
}

"""
Autogenerated return type of UploadUserImage
"""
type UploadUserImagePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User!
}

type User {
  """
  年齢
  """
  age: Int!

  """
  誕生日
  """
  birthDayDd: Int!

  """
  誕生月
  """
  birthDayMm: Int!

  """
  誕生年
  """
  birthDayYy: Int!
  gender: GenderStatus!
  id: ID!
  images: [UserImage!]!
  info: UserInfo!
  instagramLink: String!
  introduction: String!
  name: String!

  """
  @** のようなuserの識別子
  """
  slug: String!
  tiktokLink: String!
  twitterLink: String!
}

type UserImage {
  """
  画像のID
  """
  id: ID!

  """
  画像のURL
  """
  url: String!
}

type UserInfo {
  """
  クリエイターID
  """
  id: ID!

  """
  推し
  """
  stan: String!
  userId: ID!
}

input UserInfoInput {
  stan: String
}

input UserInput {
  birthDayDd: Int!
  birthDayMm: Int!
  birthDayYy: Int!
  gender: GenderStatus!
  instagramLink: String
  introduction: String
  name: String!
  tiktokLink: String
  twitterLink: String
}
