type Category {
  """
  カテゴリーID
  """
  id: ID!

  """
  カテゴリー名
  """
  name: String!
}

"""
Autogenerated input type of Connect
"""
input ConnectInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of Connect
"""
type ConnectPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  url: String!
}

"""
Autogenerated input type of CreateCreator
"""
input CreateCreatorInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  params: CreatorInput
}

"""
Autogenerated return type of CreateCreator
"""
type CreateCreatorPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  creator: Creator!
}

"""
Autogenerated input type of CreateOrder
"""
input CreateOrderInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  params: OrderInput!
}

"""
Autogenerated return type of CreateOrder
"""
type CreateOrderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  order: Order!
}

"""
Autogenerated input type of CreatePaymentMethod
"""
input CreatePaymentMethodInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreatePaymentMethod
"""
type CreatePaymentMethodPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  クライアントに渡すkey
  """
  clientSecret: String!
}

"""
Autogenerated input type of CreateProduct
"""
input CreateProductInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  image: Upload!
  params: ProductInput!
}

"""
Autogenerated return type of CreateProduct
"""
type CreateProductPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  product: Product!
}

"""
Autogenerated input type of CreateUser
"""
input CreateUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  images: [Upload!]!
  params: UserInput!
}

"""
Autogenerated return type of CreateUser
"""
type CreateUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User!
}

type Creator {
  """
  クリエイターのカテゴリー
  """
  categories: [CreatorCategory!]

  """
  クリエイターID
  """
  id: ID!

  """
  クリエイター特有の情報
  """
  info: CreatorInfo

  """
  クリエイターの商品
  """
  products: [Product!]
  user: User!
}

type CreatorCategory {
  creatorId: ID!

  """
  クリエイターID
  """
  id: ID!

  """
  カテゴリー
  """
  name: String!
}

type CreatorInfo {
  """
  所属先
  """
  belongs: String!
  creatorId: ID!

  """
  クリエイターID
  """
  id: ID!
}

input CreatorInput {
  belongs: String!
  categoryIds: [ID!]!
}

"""
Autogenerated input type of DeleteProductImage
"""
input DeleteProductImageInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteProductImage
"""
type DeleteProductImagePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  product: Product!
}

"""
Autogenerated input type of DeleteProduct
"""
input DeleteProductInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteProduct
"""
type DeleteProductPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  product: Product!
}

"""
Autogenerated input type of DeleteUserImage
"""
input DeleteUserImageInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteUserImage
"""
type DeleteUserImagePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User!
}

enum GenderStatus {
  male
  woman
}

type Mutation {
  connectStripe(
    """
    Parameters for Connect
    """
    input: ConnectInput!
  ): ConnectPayload
  createCreator(
    """
    Parameters for CreateCreator
    """
    input: CreateCreatorInput!
  ): CreateCreatorPayload
  createOrder(
    """
    Parameters for CreateOrder
    """
    input: CreateOrderInput!
  ): CreateOrderPayload
  createPaymentMethod(
    """
    Parameters for CreatePaymentMethod
    """
    input: CreatePaymentMethodInput!
  ): CreatePaymentMethodPayload
  createProduct(
    """
    Parameters for CreateProduct
    """
    input: CreateProductInput!
  ): CreateProductPayload
  createUser(
    """
    Parameters for CreateUser
    """
    input: CreateUserInput!
  ): CreateUserPayload
  deleteProduct(
    """
    Parameters for DeleteProduct
    """
    input: DeleteProductInput!
  ): DeleteProductPayload
  deleteProductImage(
    """
    Parameters for DeleteProductImage
    """
    input: DeleteProductImageInput!
  ): DeleteProductImagePayload
  deleteUserImage(
    """
    Parameters for DeleteUserImage
    """
    input: DeleteUserImageInput!
  ): DeleteUserImagePayload
  setupPaymentMethod(
    """
    Parameters for SetupPaymentMethod
    """
    input: SetupPaymentMethodInput!
  ): SetupPaymentMethodPayload
  updateProduct(
    """
    Parameters for UpdateProduct
    """
    input: UpdateProductInput!
  ): UpdateProductPayload
  updateUser(
    """
    Parameters for UpdateUser
    """
    input: UpdateUserInput!
  ): UpdateUserPayload
  updateUserInfo(
    """
    Parameters for UpdateUserInfo
    """
    input: UpdateUserInfoInput!
  ): UpdateUserInfoPayload
  uploadProductImage(
    """
    Parameters for UploadProductImage
    """
    input: UploadProductImageInput!
  ): UploadProductImagePayload
  uploadPurchaseVideo(
    """
    Parameters for UploadPurchaseVideo
    """
    input: UploadPurchaseVideoInput!
  ): UploadPurchaseVideoPayload
  uploadUserImage(
    """
    Parameters for UploadUserImage
    """
    input: UploadUserImageInput!
  ): UploadUserImagePayload
}

type Order {
  """
  注文ID
  """
  id: ID!
}

input OrderInput {
  creatorId: ID!
  paymentMethodId: ID!
  productId: ID!
  quantity: Int!
}

type PaymentMethod {
  """
  payment_methodのid
  """
  id: ID!

  """
  stripe_payment_methodのid
  """
  provider: String!

  """
  支払い方法
  """
  type: String!
}

input PaymentMethodInput {
  provider: String!
  type: String!
}

type Product {
  description: String!

  """
  プロダクトID
  """
  id: ID!
  image: ProductImage
  name: String!
  price: Int!
  quantity: Int!
  status: ProductStatus!
}

type ProductImage {
  """
  画像のID
  """
  id: ID!

  """
  画像のURL
  """
  path: String!
}

input ProductInput {
  description: String!
  name: String!
  price: Int!
  quantity: Int!
}

enum ProductStatus {
  active
  archived
  draft
}

type PurchaseVideo {
  """
  動画のID
  """
  id: ID!

  """
  動画のURL
  """
  path: String!
}

type Query {
  allPurchases: [PurchaseVideo!]!
  categories: [Category!]!
  confirmConnectStripe: StripeConfirmConnect!
  creator(id: ID): Creator!
  creatorByUser: Creator
  creators: [Creator!]!
  dashboardStripe: StripeUrl!
  paymentMethods: [StripeCard!]!
  product(id: ID!): Product!
  products: [Product!]!
  productsByUser: [Product!]!
  purchase(id: ID!): PurchaseVideo!
  user(id: ID): User!
  users: [User!]!
}

"""
Autogenerated input type of SetupPaymentMethod
"""
input SetupPaymentMethodInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  params: PaymentMethodInput!
}

"""
Autogenerated return type of SetupPaymentMethod
"""
type SetupPaymentMethodPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  paymentMethod: PaymentMethod!
}

type StripeCard {
  """
  カードブランド
  """
  brand: String!
  expMonth: Int!
  expYear: Int!

  """
  stripe_payment_methodのid
  """
  id: String!

  """
  カード番号の末4桁
  """
  last4: String!
}

type StripeConfirmConnect {
  """
  コネクトが成功したか
  """
  isCompleted: Boolean!
}

type StripeUrl {
  """
  stripe関連で返されるURL
  """
  url: String!
}

"""
Autogenerated input type of UpdateProduct
"""
input UpdateProductInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  params: ProductInput!
}

"""
Autogenerated return type of UpdateProduct
"""
type UpdateProductPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  product: Product!
}

"""
Autogenerated input type of UpdateUserInfo
"""
input UpdateUserInfoInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  params: UserInfoInput
}

"""
Autogenerated return type of UpdateUserInfo
"""
type UpdateUserInfoPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User!
}

"""
Autogenerated input type of UpdateUser
"""
input UpdateUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  params: UserInput!
}

"""
Autogenerated return type of UpdateUser
"""
type UpdateUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User!
}

scalar Upload

"""
Autogenerated input type of UploadProductImage
"""
input UploadProductImageInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  image: Upload!
}

"""
Autogenerated return type of UploadProductImage
"""
type UploadProductImagePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  product: Product!
}

"""
Autogenerated input type of UploadPurchaseVideo
"""
input UploadPurchaseVideoInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  userId: ID!
  video: Upload!
}

"""
Autogenerated return type of UploadPurchaseVideo
"""
type UploadPurchaseVideoPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  purchaseVideo: PurchaseVideo!
}

"""
Autogenerated input type of UploadUserImage
"""
input UploadUserImageInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  image: Upload!
}

"""
Autogenerated return type of UploadUserImage
"""
type UploadUserImagePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User!
}

type User {
  """
  年齢
  """
  age: Int!

  """
  誕生日
  """
  birthDayDd: Int!

  """
  誕生月
  """
  birthDayMm: Int!

  """
  誕生年
  """
  birthDayYy: Int!
  gender: GenderStatus!
  id: ID!
  images: [UserImage!]!
  info: UserInfo
  instagramLink: String!
  introduction: String!
  name: String!

  """
  @** のようなuserの識別子
  """
  slug: String!
  tiktokLink: String!
  twitterLink: String!
}

type UserImage {
  """
  画像のID
  """
  id: ID!

  """
  画像のURL
  """
  path: String!
}

type UserInfo {
  """
  クリエイターID
  """
  id: ID!

  """
  推し
  """
  stan: String!
  userId: ID!
}

input UserInfoInput {
  stan: String
}

input UserInput {
  birthDayDd: Int!
  birthDayMm: Int!
  birthDayYy: Int!
  gender: GenderStatus!
  instagramLink: String
  introduction: String
  name: String!
  tiktokLink: String
  twitterLink: String
}
